{"ast":null,"code":"var _jsxFileName = \"/Users/Seth/Documents/projects/typing_trainer/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { TextField } from '@material-ui/core';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      var c = this.state.correct;\n\n      for (var i = 0; i < this.state.word.length; i++) {\n        c.push(\"black\");\n      }\n\n      this.setState({\n        correct: c\n      });\n      fetch('/dictFreq.tsv').then(r => r.text()).then(text => {\n        var all = [];\n        var data = text.split('\\n');\n        var line = data[0].split(\"\\t\");\n        console.log(line[1].split()); // for(var i = 0; i < data.length; i++) {\n        //   var line = data[i].split('\\t');\n        //   all.push({\n        //     word: line[1].split(\"\"),\n        //     freq: line[2]\n        //   })\n        // }\n        // console.log(all[1]['word'])\n      });\n    };\n\n    this.change = e => {\n      var text = e.target.value;\n      this.setState({\n        text: e.target.value\n      });\n\n      for (var i = 0; i < this.state.word.length; i++) {\n        var key = text[i];\n        var c = this.state.correct;\n\n        if (text.length - 1 < i) {\n          c[i] = \"black\";\n        } else if (key == this.state.word[i]) {\n          c[i] = \"green\";\n        } else {\n          c[i] = \"red\";\n        }\n      }\n    };\n\n    this.state = {\n      all: [],\n      word: ['w', 'o', 'r', 'd'],\n      correct: [],\n      text: ''\n    };\n  }\n\n  render() {\n    var correct;\n    var checker = this.state.word.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        id: `let${index + 1}`,\n        style: {\n          color: this.state.correct[index],\n          display: 'inline-block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, element);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '1000px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 'auto',\n        marginBottom: '50vh',\n        paddingTop: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, checker, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        color: 'white'\n      },\n      id: \"filled-basic\",\n      label: \"text\",\n      multiline: true,\n      onChange: this.change,\n      rows: 4,\n      variant: \"filled\",\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Seth/Documents/projects/typing_trainer/src/App.js"],"names":["React","TextField","App","Component","constructor","componentDidMount","c","state","correct","i","word","length","push","setState","fetch","then","r","text","all","data","split","line","console","log","change","e","target","value","key","render","checker","map","element","index","color","display","height","width","margin","marginBottom","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { TextField } from '@material-ui/core'\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = ({\n      all: [],\n      word: ['w', 'o', 'r', 'd'],\n      correct: [],\n      text: ''\n    });\n  }\n\n  componentDidMount = () => {\n    var c = this.state.correct\n    for(var i = 0; i < this.state.word.length; i++) {\n      c.push(\"black\")\n    }\n    this.setState({\n      correct: c\n    });\n\n    fetch('/dictFreq.tsv')\n    .then((r) => r.text())\n    .then(text => {\n      var all = [];\n      var data = text.split('\\n');\n      var line = data[0].split(\"\\t\")\n      console.log(line[1].split());\n      // for(var i = 0; i < data.length; i++) {\n      //   var line = data[i].split('\\t');\n\n      //   all.push({\n      //     word: line[1].split(\"\"),\n      //     freq: line[2]\n      //   })\n      // }\n      // console.log(all[1]['word'])\n    });\n\n    \n  }\n\n  \n\n  change = (e) => {\n    var text = e.target.value\n    this.setState({\n      text: e.target.value\n    })\n    for(var i = 0; i < this.state.word.length; i++) {\n      var key = text[i];\n      var c = this.state.correct;\n      if(text.length-1 < i) {\n        c[i] = \"black\"\n      } else if(key == this.state.word[i]) {\n        c[i] = \"green\";\n      } else {\n        c[i] = \"red\"\n      }\n      \n    }\n\n  }\n    \n\n\n  render() {\n    var correct;\n    \n    var checker = this.state.word.map((element, index) => {\n      return(\n      <p\n      id={`let${index + 1}`}\n      style={{color: this.state.correct[index], display: 'inline-block'}}>\n        {element}\n      </p>\n      );\n    })\n    return (\n      <div className=\"App\" style={{ height:'1000px', width: '100%'}}>\n        \n        <div style={{margin: 'auto', marginBottom: '50vh', paddingTop: '300px'}}>\n          {checker}\n          <br />\n          <TextField \n            style={{ color: 'white' }} \n            id=\"filled-basic\" \n            label=\"text\" \n            multiline\n            onChange={this.change}\n            rows={4}\n            variant=\"filled\"\n            value={this.state.text}\n            />\n\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}