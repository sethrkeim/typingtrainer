{"ast":null,"code":"var _jsxFileName = \"/Users/Seth/Documents/projects/typing_trainer/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { TextField } from '@material-ui/core';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      var c = this.state.correct;\n\n      for (var i = 0; i < this.state.word.length; i++) {\n        c.push(\"black\");\n      }\n\n      this.setState({\n        correct: c\n      });\n    };\n\n    this.change = () => {\n      var pos = this.state.text.length - 1;\n      var key = this.state.text[pos];\n      var c = this.state.correct;\n\n      if (key == this.state.word[pos]) {\n        c[pos] = \"green\";\n      } else {\n        c[pos] = \"red\";\n      }\n    };\n\n    this.state = {\n      word: ['w', 'o', 'r', 'd'],\n      correct: [],\n      text: ''\n    };\n  }\n\n  render() {\n    var correct;\n    var checker = this.state.word.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        id: `let${index + 1}`,\n        style: {\n          color: this.state.correct[index]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, element);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '1000px',\n        width: '100%',\n        backgroundColor: 'gray'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 'auto',\n        marginBottom: '50vh',\n        paddingTop: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        color: 'white'\n      },\n      id: \"filled-basic\",\n      label: \"text\",\n      multiline: true,\n      onChange: this.change,\n      rows: 4,\n      variant: \"filled\",\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Seth/Documents/projects/typing_trainer/src/App.js"],"names":["React","TextField","App","Component","constructor","componentDidMount","c","state","correct","i","word","length","push","setState","change","pos","text","key","render","checker","map","element","index","color","height","width","backgroundColor","margin","marginBottom","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,eAAe,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,iBATc,GASM,MAAM;AACxB,UAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWC,OAAnB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC9CH,QAAAA,CAAC,CAACM,IAAF,CAAO,OAAP;AACD;;AACD,WAAKC,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAEF;AADG,OAAd;AAGD,KAjBa;;AAAA,SAmBdQ,MAnBc,GAmBL,MAAM;AACb,UAAIC,GAAG,GAAG,KAAKR,KAAL,CAAWS,IAAX,CAAgBL,MAAhB,GAAuB,CAAjC;AACA,UAAIM,GAAG,GAAG,KAAKV,KAAL,CAAWS,IAAX,CAAgBD,GAAhB,CAAV;AACA,UAAIT,CAAC,GAAG,KAAKC,KAAL,CAAWC,OAAnB;;AACA,UAAGS,GAAG,IAAI,KAAKV,KAAL,CAAWG,IAAX,CAAgBK,GAAhB,CAAV,EAAgC;AAC9BT,QAAAA,CAAC,CAACS,GAAD,CAAD,GAAS,OAAT;AACD,OAFD,MAEO;AACLT,QAAAA,CAAC,CAACS,GAAD,CAAD,GAAS,KAAT;AACD;AACF,KA5Ba;;AAEZ,SAAKR,KAAL,GAAc;AACZG,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADM;AAEZF,MAAAA,OAAO,EAAE,EAFG;AAGZQ,MAAAA,IAAI,EAAE;AAHM,KAAd;AAKD;;AAwBDE,EAAAA,MAAM,GAAG;AACP,QAAIV,OAAJ;AAEA,QAAIW,OAAO,GAAG,KAAKZ,KAAL,CAAWG,IAAX,CAAgBU,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACpD,0BACA;AACA,QAAA,EAAE,EAAG,MAAKA,KAAK,GAAG,CAAE,EADpB;AAEA,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,OAAX,CAAmBc,KAAnB;AAAR,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGD,OAHH,CADA;AAOD,KARa,CAAd;AASA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAC,QAAT;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAkCC,QAAAA,eAAe,EAAE;AAAnD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,YAAY,EAAE,MAA/B;AAAuCC,QAAAA,UAAU,EAAE;AAAnD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE;AAAEN,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,QAAQ,EAAE,KAAKT,MALjB;AAME,MAAA,IAAI,EAAE,CANR;AAOE,MAAA,OAAO,EAAC,QAPV;AAQE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWS,IARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AAmBD;;AA/D8C","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { TextField } from '@material-ui/core'\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = ({\n      word: ['w', 'o', 'r', 'd'],\n      correct: [],\n      text: ''\n    });\n  }\n\n  componentDidMount = () => {\n    var c = this.state.correct\n    for(var i = 0; i < this.state.word.length; i++) {\n      c.push(\"black\")\n    }\n    this.setState({\n      correct: c\n    });\n  }\n\n  change = () => {\n    var pos = this.state.text.length-1\n    var key = this.state.text[pos];\n    var c = this.state.correct;\n    if(key == this.state.word[pos]) {\n      c[pos] = \"green\";\n    } else {\n      c[pos] = \"red\"\n    }\n  }\n\n\n  render() {\n    var correct;\n    \n    var checker = this.state.word.map((element, index) => {\n      return(\n      <p\n      id={`let${index + 1}`}\n      style={{color: this.state.correct[index]}}>\n        {element}\n      </p>\n      );\n    })\n    return (\n      <div className=\"App\" style={{ height:'1000px', width: '100%', backgroundColor: 'gray'}}>\n        \n        <div style={{margin: 'auto', marginBottom: '50vh', paddingTop: '300px'}}>\n          \n          <TextField \n            style={{ color: 'white' }} \n            id=\"filled-basic\" \n            label=\"text\" \n            multiline\n            onChange={this.change}\n            rows={4}\n            variant=\"filled\"\n            value={this.state.text}\n            />\n\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}